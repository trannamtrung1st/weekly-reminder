@page "/auth/login"
@attribute [AllowAnonymous]
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<h3>Login</h3>

@if (!string.IsNullOrEmpty(Error))
{
    <div class="alert alert-danger" role="alert">
    @Error
</div>
}

<form action="/api/auth/login" method="post">
    <div class="form-group">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" class="form-control" />
    </div>
    <div class="mt-2">
        <button type="submit" class="btn btn-primary">Login</button>
    </div>
</form>

@code {
    [Parameter, SupplyParameterFromQuery]
    public string Error { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) return;
        if (!string.IsNullOrEmpty(Error))
        {
            await JSRuntime.InvokeVoidAsync("replaceState");
        }
    }
}