@page "/user/list"
@attribute [Authorize]
@inject IUserService UserService
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<h3>User List</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger" role="alert">
        @errorMessage
    </div>
}

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Email</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Username</td>
                    <td>@user.Email</td>
                    <td>
                        <a href="/user/edit/@user.Id" class="btn btn-primary">Edit</a>
                        <button class="btn btn-danger" @onclick="() => ConfirmDeleteUser(user.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<a href="/user/create" class="btn btn-success">Create New User</a>

@code {
    private IEnumerable<UserEntity> users;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        await LoadUsers();
    }

    private async Task LoadUsers()
    {
        try
        {
            users = await UserService.GetAllUsersAsync();
            errorMessage = null;
        }
        catch (Exception ex)
        {
            errorMessage = $"Error loading users: {ex.Message}";
        }
    }

    private async Task DeleteUser(Guid id)
    {
        try
        {
            await UserService.DeleteUserAsync(id);
            await LoadUsers();
        }
        catch (Exception ex)
        {
            errorMessage = $"Error deleting user: {ex.Message}";
        }
    }

    private async Task ConfirmDeleteUser(Guid id)
    {
        if (await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete this user?"))
        {
            await DeleteUser(id);
        }
    }
}